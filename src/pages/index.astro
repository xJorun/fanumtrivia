---
export const prerender = false;
---

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fanum Trivia Championship</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: #1a1a1a;
            color: white;
            margin: 0;
            padding: 20px;
            min-height: 100vh;
        }
        
        .container {
            max-width: 800px;
            margin: 0 auto;
            text-align: center;
        }
        
        h1 {
            color: #8b5cf6;
        }
        
        .status {
            padding: 20px;
            background: rgba(139, 92, 246, 0.1);
            border: 1px solid #8b5cf6;
            border-radius: 8px;
            margin: 20px 0;
        }
        
        input {
            padding: 10px;
            margin: 10px;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid #8b5cf6;
            color: white;
            border-radius: 4px;
            width: 200px;
        }
        
        button {
            padding: 10px 20px;
            margin: 10px;
            background: #8b5cf6;
            border: none;
            color: white;
            border-radius: 4px;
            cursor: pointer;
            font-weight: bold;
        }
        
        button:hover {
            background: #7c3aed;
        }
        
        button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        
        .players {
            margin-top: 20px;
            padding: 20px;
            background: rgba(0, 0, 0, 0.3);
            border-radius: 8px;
        }
        
        .player {
            padding: 8px;
            margin: 4px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Fanum Discord Trivia Championship</h1>
        
        <div class="status">
            <p id="statusText">Initializing...</p>
        </div>
        
        <div id="loginForm">
            <h2>Join Game</h2>
            <div>
                <input type="text" id="playerName" placeholder="Your Name" />
            </div>
            <div>
                <input type="text" id="discordId" placeholder="Discord ID" />
            </div>
            <button id="joinBtn" onclick="joinGame()" disabled>Join Game</button>
        </div>
        
        <div id="gameRoom" style="display: none;">
            <h2>Game Room</h2>
            <p>Game ID: <span id="gameId">-</span></p>
            <div class="players">
                <h3>Players:</h3>
                <div id="playersList"></div>
            </div>
            <button id="startBtn" onclick="startGame()" style="display: none;">Start Game</button>
        </div>
    </div>

    <!-- Firebase Scripts -->
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-database-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-auth-compat.js"></script>

    <script>
        // Globals
        let app, db, auth;
        let gameState = {
            gameId: null,
            userId: null,
            isHost: false,
            players: {}
        };

        // Firebase config
        const firebaseConfig = {
            apiKey: "AIzaSyAJD2YAQQ-J2FSPYAveUMiGZwFKCxpA2ZM",
            authDomain: "trivia-7991b.firebaseapp.com",
            databaseURL: "https://trivia-7991b-default-rtdb.firebaseio.com",
            projectId: "trivia-7991b",
            storageBucket: "trivia-7991b.firebasestorage.app",
            messagingSenderId: "195180427387",
            appId: "1:195180427387:web:791059ee47d7705c41cade"
        };

        // Initialize
        window.addEventListener('DOMContentLoaded', initializeApp);

        async function initializeApp() {
            const statusEl = document.getElementById('statusText');
            
            try {
                // Initialize Firebase
                statusEl.textContent = 'Connecting to Firebase...';
                app = firebase.initializeApp(firebaseConfig);
                db = firebase.database();
                auth = firebase.auth();
                
                // Sign in anonymously
                statusEl.textContent = 'Authenticating...';
                const userCredential = await auth.signInAnonymously();
                gameState.userId = userCredential.user.uid;
                
                statusEl.textContent = 'Ready! Enter your details to join.';
                
                // Enable form
                document.getElementById('joinBtn').disabled = false;
                
                // Setup input validation
                document.getElementById('playerName').addEventListener('input', validateForm);
                document.getElementById('discordId').addEventListener('input', validateForm);
                
            } catch (error) {
                console.error('Initialization error:', error);
                statusEl.textContent = 'Error: ' + error.message;
                statusEl.style.color = '#ff4444';
            }
        }

        function validateForm() {
            const name = document.getElementById('playerName').value.trim();
            const discord = document.getElementById('discordId').value.trim();
            document.getElementById('joinBtn').disabled = !name || !discord;
        }

        async function joinGame() {
            const name = document.getElementById('playerName').value.trim();
            const discordId = document.getElementById('discordId').value.trim();
            
            if (!name || !discordId) return;
            
            try {
                // Find or create game
                const gamesRef = db.ref('games');
                const snapshot = await gamesRef.orderByChild('status').equalTo('waiting').limitToFirst(1).once('value');
                
                let gameId;
                if (snapshot.exists()) {
                    gameId = Object.keys(snapshot.val())[0];
                } else {
                    // Create new game
                    const newGame = gamesRef.push();
                    gameId = newGame.key;
                    gameState.isHost = true;
                    
                    await newGame.set({
                        status: 'waiting',
                        host: gameState.userId,
                        createdAt: Date.now()
                    });
                }
                
                gameState.gameId = gameId;
                
                // Add player
                await db.ref('games/' + gameId + '/players/' + gameState.userId).set({
                    name: name,
                    discordId: discordId,
                    joinedAt: Date.now()
                });
                
                // Show game room
                document.getElementById('loginForm').style.display = 'none';
                document.getElementById('gameRoom').style.display = 'block';
                document.getElementById('gameId').textContent = gameId.slice(-6).toUpperCase();
                
                if (gameState.isHost) {
                    document.getElementById('startBtn').style.display = 'inline-block';
                }
                
                // Listen for players
                db.ref('games/' + gameId + '/players').on('value', updatePlayersList);
                
            } catch (error) {
                console.error('Join error:', error);
                alert('Failed to join game: ' + error.message);
            }
        }

        function updatePlayersList(snapshot) {
            const players = snapshot.val() || {};
            const listEl = document.getElementById('playersList');
            
            listEl.innerHTML = Object.entries(players).map(([id, player]) => {
                const isYou = id === gameState.userId;
                return '<div class="player">' + player.name + (isYou ? ' (You)' : '') + '</div>';
            }).join('');
        }

        async function startGame() {
            if (!gameState.isHost || !gameState.gameId) return;
            
            try {
                await db.ref('games/' + gameState.gameId + '/status').set('playing');
                alert('Game started! (Game implementation coming soon)');
            } catch (error) {
                console.error('Start error:', error);
                alert('Failed to start game: ' + error.message);
            }
        }
    </script>
</body>
</html>
